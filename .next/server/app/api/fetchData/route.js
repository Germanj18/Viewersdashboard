"use strict";(()=>{var e={};e.id=766,e.ids=[766],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},62873:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>m,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>D,staticGenerationAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{GET:()=>p});var s=r(49303),n=r(88716),o=r(60670),i=r(87070);let u=new(r(53524)).PrismaClient;async function p(e){let{searchParams:t}=new URL(e.url),r=t.get("startDate"),a=t.get("endDate");if(!r||!a)return i.NextResponse.json({message:"Invalid date range"},{status:400});try{let e=await u.$queryRaw`
      SELECT * FROM "excelData"
      WHERE DATE(date) >= TO_DATE(${r}, 'YYYY-MM-DD') 
      AND DATE(date) <= TO_DATE(${a}, 'YYYY-MM-DD')
    `;return i.NextResponse.json(e)}catch(e){return console.error("Error al obtener los datos:",e),i.NextResponse.json({message:"Internal server error"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/fetchData/route",pathname:"/api/fetchData",filename:"route",bundlePath:"app/api/fetchData/route"},resolvedPagePath:"C:\\Users\\German\\Desktop\\Dashboard Viewers- LaCasa\\youtube-viewers-lacasa\\src\\app\\api\\fetchData\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:D}=c,h="/api/fetchData/route";function m(){return(0,o.patchFetch)({serverHooks:D,staticGenerationAsyncStorage:l})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,972],()=>r(62873));module.exports=a})();