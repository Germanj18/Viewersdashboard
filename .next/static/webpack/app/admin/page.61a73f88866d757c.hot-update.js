"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/app/components/GlobalContext.tsx":
/*!**********************************************!*\
  !*** ./src/app/components/GlobalContext.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalProvider: function() { return /* binding */ GlobalProvider; },\n/* harmony export */   useGlobal: function() { return /* binding */ useGlobal; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst GlobalContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst GlobalProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [link, setLink] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>localStorage.getItem(\"link\") || \"\");\n    const [blockViewers, setBlockViewers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [expiredViewers, setExpiredViewers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Calcular viewers que deben descontarse por haber completado su duración\n    const getExpiredViewersCount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        try {\n            const globalHistoryKey = \"globalOperationsHistory\";\n            const globalHistory = localStorage.getItem(globalHistoryKey);\n            if (!globalHistory) return 0;\n            const operations = JSON.parse(globalHistory);\n            const now = new Date();\n            let expiredViewers = 0;\n            operations.forEach((op)=>{\n                // Solo procesar operaciones exitosas con duración\n                if (op.status === \"success\" && op.duration && (op.savedAt || op.startTime)) {\n                    try {\n                        const baseTime = op.savedAt || op.startTime;\n                        const startDate = new Date(baseTime);\n                        if (!isNaN(startDate.getTime())) {\n                            const endTime = new Date(startDate.getTime() + op.duration * 60 * 1000);\n                            // Si la operación ya terminó naturalmente, descontar sus viewers\n                            if (now > endTime) {\n                                expiredViewers += op.count || 0;\n                            }\n                        }\n                    } catch (error) {\n                        console.warn(\"Error calculando operaci\\xf3n expirada:\", error);\n                    }\n                }\n            });\n            return expiredViewers;\n        } catch (error) {\n            console.error(\"Error calculando viewers expirados:\", error);\n            return 0;\n        }\n    }, []);\n    // Actualizar viewers expirados cada minuto\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateExpiredViewers = ()=>{\n            const expired = getExpiredViewersCount();\n            setExpiredViewers(expired);\n        };\n        // Actualizar inmediatamente\n        updateExpiredViewers();\n        // Actualizar cada minuto\n        const interval = setInterval(updateExpiredViewers, 60000);\n        return ()=>clearInterval(interval);\n    }, [\n        getExpiredViewersCount\n    ]);\n    // Guardar link en localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"link\", link);\n    }, [\n        link\n    ]);\n    const updateBlockViewers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((blockId, viewers)=>{\n        setBlockViewers((prev)=>{\n            // Solo actualizar si el valor ha cambiado\n            if (prev[blockId] !== viewers) {\n                return {\n                    ...prev,\n                    [blockId]: viewers\n                };\n            }\n            return prev;\n        });\n    }, []);\n    // Calcular total de viewers: suma de bloques activos - viewers de operaciones que ya terminaron\n    const currentActiveViewers = Object.values(blockViewers).reduce((acc, viewers)=>acc + viewers, 0);\n    const totalViewers = Math.max(0, currentActiveViewers - expiredViewers);\n    // Función para calcular el total de viewers enviados incluyendo reiniciados\n    const getTotalViewersSent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        try {\n            // Viewers activos actuales\n            const activeViewers = totalViewers;\n            // Viewers expirados (que terminaron su duración)\n            const expiredViewers = getExpiredViewersCount();\n            // Viewers de bloques reiniciados\n            const resetHistoryKey = \"blockResetHistory\";\n            const resetHistory = localStorage.getItem(resetHistoryKey);\n            let resetViewers = 0;\n            if (resetHistory) {\n                try {\n                    const resets = JSON.parse(resetHistory);\n                    resetViewers = resets.reduce((sum, reset)=>sum + (reset.viewersLost || 0), 0);\n                } catch (error) {\n                    console.error(\"Error calculando viewers reiniciados:\", error);\n                }\n            }\n            // Total enviados = activos + expirados + reiniciados\n            return activeViewers + expiredViewers + resetViewers;\n        } catch (error) {\n            console.error(\"Error calculando total de viewers enviados:\", error);\n            return totalViewers;\n        }\n    }, [\n        totalViewers,\n        getExpiredViewersCount\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GlobalContext.Provider, {\n        value: {\n            link,\n            setLink,\n            totalViewers,\n            updateBlockViewers,\n            getExpiredViewersCount,\n            getTotalViewersSent\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\German\\\\Desktop\\\\Dashboard Viewers- LaCasa\\\\youtube-viewers-lacasa\\\\src\\\\app\\\\components\\\\GlobalContext.tsx\",\n        lineNumber: 129,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GlobalProvider, \"MYZvQNj5g0JGruqTULVbK9D2pUc=\");\n_c = GlobalProvider;\nconst useGlobal = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GlobalContext);\n    if (!context) {\n        throw new Error(\"useGlobal must be used within a GlobalProvider\");\n    }\n    return context;\n};\n_s1(useGlobal, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/GlobalContext.tsx\n"));

/***/ })

});