"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/app/components/GlobalContext.tsx":
/*!**********************************************!*\
  !*** ./src/app/components/GlobalContext.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalProvider: function() { return /* binding */ GlobalProvider; },\n/* harmony export */   useGlobal: function() { return /* binding */ useGlobal; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst GlobalContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst GlobalProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [link, setLink] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>localStorage.getItem(\"link\") || \"\");\n    const [blockViewers, setBlockViewers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [expiredViewers, setExpiredViewers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Calcular viewers que deben descontarse por haber completado su duración\n    const getExpiredViewersCount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        try {\n            const globalHistoryKey = \"globalOperationsHistory\";\n            const globalHistory = localStorage.getItem(globalHistoryKey);\n            if (!globalHistory) return 0;\n            const operations = JSON.parse(globalHistory);\n            const now = new Date();\n            let expiredViewers = 0;\n            operations.forEach((op)=>{\n                // Solo procesar operaciones exitosas con duración\n                if (op.status === \"success\" && op.duration && (op.savedAt || op.startTime)) {\n                    try {\n                        const baseTime = op.savedAt || op.startTime;\n                        const startDate = new Date(baseTime);\n                        if (!isNaN(startDate.getTime())) {\n                            const endTime = new Date(startDate.getTime() + op.duration * 60 * 1000);\n                            // Si la operación ya terminó naturalmente, descontar sus viewers\n                            if (now > endTime) {\n                                expiredViewers += op.count || 0;\n                            }\n                        }\n                    } catch (error) {\n                        console.warn(\"Error calculando operaci\\xf3n expirada:\", error);\n                    }\n                }\n            });\n            return expiredViewers;\n        } catch (error) {\n            console.error(\"Error calculando viewers expirados:\", error);\n            return 0;\n        }\n    }, []);\n    // Actualizar viewers expirados cada minuto\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateExpiredViewers = ()=>{\n            const expired = getExpiredViewersCount();\n            setExpiredViewers(expired);\n        };\n        // Actualizar inmediatamente\n        updateExpiredViewers();\n        // Actualizar cada minuto\n        const interval = setInterval(updateExpiredViewers, 60000);\n        return ()=>clearInterval(interval);\n    }, [\n        getExpiredViewersCount\n    ]);\n    // Guardar link en localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"link\", link);\n    }, [\n        link\n    ]);\n    const updateBlockViewers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((blockId, viewers)=>{\n        setBlockViewers((prev)=>{\n            // Solo actualizar si el valor ha cambiado\n            if (prev[blockId] !== viewers) {\n                return {\n                    ...prev,\n                    [blockId]: viewers\n                };\n            }\n            return prev;\n        });\n    }, []);\n    // Calcular total de viewers: suma de bloques activos - viewers de operaciones que ya terminaron\n    const currentActiveViewers = Object.values(blockViewers).reduce((acc, viewers)=>acc + viewers, 0);\n    const totalViewers = Math.max(0, currentActiveViewers - expiredViewers);\n    // Función para calcular el total de viewers enviados incluyendo reiniciados\n    const getTotalViewersSent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        try {\n            // Viewers activos actuales\n            const activeViewers = totalViewers;\n            // Viewers expirados (que terminaron su duración)\n            const expiredViewers = getExpiredViewersCount();\n            // Viewers de bloques reiniciados\n            const resetHistoryKey = \"blockResetHistory\";\n            const resetHistory = localStorage.getItem(resetHistoryKey);\n            let resetViewers = 0;\n            if (resetHistory) {\n                try {\n                    const resets = JSON.parse(resetHistory);\n                    resetViewers = resets.reduce((sum, reset)=>sum + (reset.viewersLost || 0), 0);\n                } catch (error) {\n                    console.error(\"Error calculando viewers reiniciados:\", error);\n                }\n            }\n            // Total enviados = activos + expirados + reiniciados\n            return activeViewers + expiredViewers + resetViewers;\n        } catch (error) {\n            console.error(\"Error calculando total de viewers enviados:\", error);\n            return totalViewers;\n        }\n    }, [\n        totalViewers,\n        getExpiredViewersCount\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GlobalContext.Provider, {\n        value: {\n            link,\n            setLink,\n            totalViewers,\n            updateBlockViewers,\n            getExpiredViewersCount\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\German\\\\Desktop\\\\Dashboard Viewers- LaCasa\\\\youtube-viewers-lacasa\\\\src\\\\app\\\\components\\\\GlobalContext.tsx\",\n        lineNumber: 129,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GlobalProvider, \"MYZvQNj5g0JGruqTULVbK9D2pUc=\");\n_c = GlobalProvider;\nconst useGlobal = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GlobalContext);\n    if (!context) {\n        throw new Error(\"useGlobal must be used within a GlobalProvider\");\n    }\n    return context;\n};\n_s1(useGlobal, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY29tcG9uZW50cy9HbG9iYWxDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJGO0FBVzNGLE1BQU1NLDhCQUFnQkwsb0RBQWFBLENBQWlDTTtBQUU3RCxNQUFNQyxpQkFBMEQ7UUFBQyxFQUFFQyxRQUFRLEVBQUU7O0lBQ2xGLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHVCwrQ0FBUUEsQ0FBUyxJQUFNVSxhQUFhQyxPQUFPLENBQUMsV0FBVztJQUMvRSxNQUFNLENBQUNDLGNBQWNDLGdCQUFnQixHQUFHYiwrQ0FBUUEsQ0FBeUIsQ0FBQztJQUMxRSxNQUFNLENBQUNjLGdCQUFnQkMsa0JBQWtCLEdBQUdmLCtDQUFRQSxDQUFTO0lBRTdELDBFQUEwRTtJQUMxRSxNQUFNZ0IseUJBQXlCYixrREFBV0EsQ0FBQztRQUN6QyxJQUFJO1lBQ0YsTUFBTWMsbUJBQW1CO1lBQ3pCLE1BQU1DLGdCQUFnQlIsYUFBYUMsT0FBTyxDQUFDTTtZQUUzQyxJQUFJLENBQUNDLGVBQWUsT0FBTztZQUUzQixNQUFNQyxhQUFhQyxLQUFLQyxLQUFLLENBQUNIO1lBQzlCLE1BQU1JLE1BQU0sSUFBSUM7WUFDaEIsSUFBSVQsaUJBQWlCO1lBRXJCSyxXQUFXSyxPQUFPLENBQUMsQ0FBQ0M7Z0JBQ2xCLGtEQUFrRDtnQkFDbEQsSUFBSUEsR0FBR0MsTUFBTSxLQUFLLGFBQWFELEdBQUdFLFFBQVEsSUFBS0YsQ0FBQUEsR0FBR0csT0FBTyxJQUFJSCxHQUFHSSxTQUFTLEdBQUc7b0JBQzFFLElBQUk7d0JBQ0YsTUFBTUMsV0FBV0wsR0FBR0csT0FBTyxJQUFJSCxHQUFHSSxTQUFTO3dCQUMzQyxNQUFNRSxZQUFZLElBQUlSLEtBQUtPO3dCQUUzQixJQUFJLENBQUNFLE1BQU1ELFVBQVVFLE9BQU8sS0FBSzs0QkFDL0IsTUFBTUMsVUFBVSxJQUFJWCxLQUFLUSxVQUFVRSxPQUFPLEtBQU1SLEdBQUdFLFFBQVEsR0FBRyxLQUFLOzRCQUVuRSxpRUFBaUU7NEJBQ2pFLElBQUlMLE1BQU1ZLFNBQVM7Z0NBQ2pCcEIsa0JBQWtCVyxHQUFHVSxLQUFLLElBQUk7NEJBQ2hDO3dCQUNGO29CQUNGLEVBQUUsT0FBT0MsT0FBTzt3QkFDZEMsUUFBUUMsSUFBSSxDQUFDLDJDQUF3Q0Y7b0JBQ3ZEO2dCQUNGO1lBQ0Y7WUFFQSxPQUFPdEI7UUFDVCxFQUFFLE9BQU9zQixPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyx1Q0FBdUNBO1lBQ3JELE9BQU87UUFDVDtJQUNGLEdBQUcsRUFBRTtJQUVMLDJDQUEyQztJQUMzQ25DLGdEQUFTQSxDQUFDO1FBQ1IsTUFBTXNDLHVCQUF1QjtZQUMzQixNQUFNQyxVQUFVeEI7WUFDaEJELGtCQUFrQnlCO1FBQ3BCO1FBRUEsNEJBQTRCO1FBQzVCRDtRQUVBLHlCQUF5QjtRQUN6QixNQUFNRSxXQUFXQyxZQUFZSCxzQkFBc0I7UUFFbkQsT0FBTyxJQUFNSSxjQUFjRjtJQUM3QixHQUFHO1FBQUN6QjtLQUF1QjtJQUUzQiwrQkFBK0I7SUFDL0JmLGdEQUFTQSxDQUFDO1FBQ1JTLGFBQWFrQyxPQUFPLENBQUMsUUFBUXBDO0lBQy9CLEdBQUc7UUFBQ0E7S0FBSztJQUVULE1BQU1xQyxxQkFBcUIxQyxrREFBV0EsQ0FBQyxDQUFDMkMsU0FBaUJDO1FBQ3ZEbEMsZ0JBQWdCbUMsQ0FBQUE7WUFDZCwwQ0FBMEM7WUFDMUMsSUFBSUEsSUFBSSxDQUFDRixRQUFRLEtBQUtDLFNBQVM7Z0JBQzdCLE9BQU87b0JBQ0wsR0FBR0MsSUFBSTtvQkFDUCxDQUFDRixRQUFRLEVBQUVDO2dCQUNiO1lBQ0Y7WUFDQSxPQUFPQztRQUNUO0lBQ0YsR0FBRyxFQUFFO0lBRUwsZ0dBQWdHO0lBQ2hHLE1BQU1DLHVCQUF1QkMsT0FBT0MsTUFBTSxDQUFDdkMsY0FBY3dDLE1BQU0sQ0FBQyxDQUFDQyxLQUFLTixVQUFZTSxNQUFNTixTQUFTO0lBQ2pHLE1BQU1PLGVBQWVDLEtBQUtDLEdBQUcsQ0FBQyxHQUFHUCx1QkFBdUJuQztJQUV4RCw0RUFBNEU7SUFDNUUsTUFBTTJDLHNCQUFzQnRELGtEQUFXQSxDQUFDO1FBQ3RDLElBQUk7WUFDRiwyQkFBMkI7WUFDM0IsTUFBTXVELGdCQUFnQko7WUFFdEIsaURBQWlEO1lBQ2pELE1BQU14QyxpQkFBaUJFO1lBRXZCLGlDQUFpQztZQUNqQyxNQUFNMkMsa0JBQWtCO1lBQ3hCLE1BQU1DLGVBQWVsRCxhQUFhQyxPQUFPLENBQUNnRDtZQUMxQyxJQUFJRSxlQUFlO1lBRW5CLElBQUlELGNBQWM7Z0JBQ2hCLElBQUk7b0JBQ0YsTUFBTUUsU0FBUzFDLEtBQUtDLEtBQUssQ0FBQ3VDO29CQUMxQkMsZUFBZUMsT0FBT1YsTUFBTSxDQUFDLENBQUNXLEtBQWFDLFFBQWVELE1BQU9DLENBQUFBLE1BQU1DLFdBQVcsSUFBSSxJQUFJO2dCQUM1RixFQUFFLE9BQU83QixPQUFPO29CQUNkQyxRQUFRRCxLQUFLLENBQUMseUNBQXlDQTtnQkFDekQ7WUFDRjtZQUVBLHFEQUFxRDtZQUNyRCxPQUFPc0IsZ0JBQWdCNUMsaUJBQWlCK0M7UUFDMUMsRUFBRSxPQUFPekIsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsK0NBQStDQTtZQUM3RCxPQUFPa0I7UUFDVDtJQUNGLEdBQUc7UUFBQ0E7UUFBY3RDO0tBQXVCO0lBRXpDLHFCQUNFLDhEQUFDWixjQUFjOEQsUUFBUTtRQUFDQyxPQUFPO1lBQzdCM0Q7WUFDQUM7WUFDQTZDO1lBQ0FUO1lBQ0E3QjtRQUNGO2tCQUNHVDs7Ozs7O0FBR1AsRUFBRTtHQTdIV0Q7S0FBQUE7QUErSE4sTUFBTThELFlBQVk7O0lBQ3ZCLE1BQU1DLFVBQVVuRSxpREFBVUEsQ0FBQ0U7SUFDM0IsSUFBSSxDQUFDaUUsU0FBUztRQUNaLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1QsRUFBRTtJQU5XRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL2NvbXBvbmVudHMvR2xvYmFsQ29udGV4dC50c3g/YTcxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ29udGV4dCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5pbnRlcmZhY2UgR2xvYmFsQ29udGV4dFByb3BzIHtcclxuICBsaW5rOiBzdHJpbmc7XHJcbiAgc2V0TGluazogKGxpbms6IHN0cmluZykgPT4gdm9pZDtcclxuICB0b3RhbFZpZXdlcnM6IG51bWJlcjtcclxuICB1cGRhdGVCbG9ja1ZpZXdlcnM6IChibG9ja0lkOiBzdHJpbmcsIHZpZXdlcnM6IG51bWJlcikgPT4gdm9pZDtcclxuICBnZXRFeHBpcmVkVmlld2Vyc0NvdW50OiAoKSA9PiBudW1iZXI7XHJcbiAgZ2V0VG90YWxWaWV3ZXJzU2VudDogKCkgPT4gbnVtYmVyO1xyXG59XHJcblxyXG5jb25zdCBHbG9iYWxDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxHbG9iYWxDb250ZXh0UHJvcHMgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XHJcblxyXG5leHBvcnQgY29uc3QgR2xvYmFsUHJvdmlkZXI6IFJlYWN0LkZDPHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9PiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcclxuICBjb25zdCBbbGluaywgc2V0TGlua10gPSB1c2VTdGF0ZTxzdHJpbmc+KCgpID0+IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsaW5rJykgfHwgJycpO1xyXG4gIGNvbnN0IFtibG9ja1ZpZXdlcnMsIHNldEJsb2NrVmlld2Vyc10gPSB1c2VTdGF0ZTxSZWNvcmQ8c3RyaW5nLCBudW1iZXI+Pih7fSk7XHJcbiAgY29uc3QgW2V4cGlyZWRWaWV3ZXJzLCBzZXRFeHBpcmVkVmlld2Vyc10gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xyXG4gIFxyXG4gIC8vIENhbGN1bGFyIHZpZXdlcnMgcXVlIGRlYmVuIGRlc2NvbnRhcnNlIHBvciBoYWJlciBjb21wbGV0YWRvIHN1IGR1cmFjacOzblxyXG4gIGNvbnN0IGdldEV4cGlyZWRWaWV3ZXJzQ291bnQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBnbG9iYWxIaXN0b3J5S2V5ID0gJ2dsb2JhbE9wZXJhdGlvbnNIaXN0b3J5JztcclxuICAgICAgY29uc3QgZ2xvYmFsSGlzdG9yeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGdsb2JhbEhpc3RvcnlLZXkpO1xyXG4gICAgICBcclxuICAgICAgaWYgKCFnbG9iYWxIaXN0b3J5KSByZXR1cm4gMDtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IG9wZXJhdGlvbnMgPSBKU09OLnBhcnNlKGdsb2JhbEhpc3RvcnkpO1xyXG4gICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICBsZXQgZXhwaXJlZFZpZXdlcnMgPSAwO1xyXG4gICAgICBcclxuICAgICAgb3BlcmF0aW9ucy5mb3JFYWNoKChvcDogYW55KSA9PiB7XHJcbiAgICAgICAgLy8gU29sbyBwcm9jZXNhciBvcGVyYWNpb25lcyBleGl0b3NhcyBjb24gZHVyYWNpw7NuXHJcbiAgICAgICAgaWYgKG9wLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnICYmIG9wLmR1cmF0aW9uICYmIChvcC5zYXZlZEF0IHx8IG9wLnN0YXJ0VGltZSkpIHtcclxuICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJhc2VUaW1lID0gb3Auc2F2ZWRBdCB8fCBvcC5zdGFydFRpbWU7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKGJhc2VUaW1lKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmICghaXNOYU4oc3RhcnREYXRlLmdldFRpbWUoKSkpIHtcclxuICAgICAgICAgICAgICBjb25zdCBlbmRUaW1lID0gbmV3IERhdGUoc3RhcnREYXRlLmdldFRpbWUoKSArIChvcC5kdXJhdGlvbiAqIDYwICogMTAwMCkpO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIC8vIFNpIGxhIG9wZXJhY2nDs24geWEgdGVybWluw7MgbmF0dXJhbG1lbnRlLCBkZXNjb250YXIgc3VzIHZpZXdlcnNcclxuICAgICAgICAgICAgICBpZiAobm93ID4gZW5kVGltZSkge1xyXG4gICAgICAgICAgICAgICAgZXhwaXJlZFZpZXdlcnMgKz0gb3AuY291bnQgfHwgMDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRXJyb3IgY2FsY3VsYW5kbyBvcGVyYWNpw7NuIGV4cGlyYWRhOicsIGVycm9yKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgcmV0dXJuIGV4cGlyZWRWaWV3ZXJzO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FsY3VsYW5kbyB2aWV3ZXJzIGV4cGlyYWRvczonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gIH0sIFtdKTtcclxuXHJcbiAgLy8gQWN0dWFsaXphciB2aWV3ZXJzIGV4cGlyYWRvcyBjYWRhIG1pbnV0b1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCB1cGRhdGVFeHBpcmVkVmlld2VycyA9ICgpID0+IHtcclxuICAgICAgY29uc3QgZXhwaXJlZCA9IGdldEV4cGlyZWRWaWV3ZXJzQ291bnQoKTtcclxuICAgICAgc2V0RXhwaXJlZFZpZXdlcnMoZXhwaXJlZCk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvLyBBY3R1YWxpemFyIGlubWVkaWF0YW1lbnRlXHJcbiAgICB1cGRhdGVFeHBpcmVkVmlld2VycygpO1xyXG4gICAgXHJcbiAgICAvLyBBY3R1YWxpemFyIGNhZGEgbWludXRvXHJcbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKHVwZGF0ZUV4cGlyZWRWaWV3ZXJzLCA2MDAwMCk7XHJcbiAgICBcclxuICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKTtcclxuICB9LCBbZ2V0RXhwaXJlZFZpZXdlcnNDb3VudF0pO1xyXG5cclxuICAvLyBHdWFyZGFyIGxpbmsgZW4gbG9jYWxTdG9yYWdlXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsaW5rJywgbGluayk7XHJcbiAgfSwgW2xpbmtdKTtcclxuXHJcbiAgY29uc3QgdXBkYXRlQmxvY2tWaWV3ZXJzID0gdXNlQ2FsbGJhY2soKGJsb2NrSWQ6IHN0cmluZywgdmlld2VyczogbnVtYmVyKSA9PiB7XHJcbiAgICBzZXRCbG9ja1ZpZXdlcnMocHJldiA9PiB7XHJcbiAgICAgIC8vIFNvbG8gYWN0dWFsaXphciBzaSBlbCB2YWxvciBoYSBjYW1iaWFkb1xyXG4gICAgICBpZiAocHJldltibG9ja0lkXSAhPT0gdmlld2Vycykge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAuLi5wcmV2LFxyXG4gICAgICAgICAgW2Jsb2NrSWRdOiB2aWV3ZXJzXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcHJldjtcclxuICAgIH0pO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgLy8gQ2FsY3VsYXIgdG90YWwgZGUgdmlld2Vyczogc3VtYSBkZSBibG9xdWVzIGFjdGl2b3MgLSB2aWV3ZXJzIGRlIG9wZXJhY2lvbmVzIHF1ZSB5YSB0ZXJtaW5hcm9uXHJcbiAgY29uc3QgY3VycmVudEFjdGl2ZVZpZXdlcnMgPSBPYmplY3QudmFsdWVzKGJsb2NrVmlld2VycykucmVkdWNlKChhY2MsIHZpZXdlcnMpID0+IGFjYyArIHZpZXdlcnMsIDApO1xyXG4gIGNvbnN0IHRvdGFsVmlld2VycyA9IE1hdGgubWF4KDAsIGN1cnJlbnRBY3RpdmVWaWV3ZXJzIC0gZXhwaXJlZFZpZXdlcnMpO1xyXG5cclxuICAvLyBGdW5jacOzbiBwYXJhIGNhbGN1bGFyIGVsIHRvdGFsIGRlIHZpZXdlcnMgZW52aWFkb3MgaW5jbHV5ZW5kbyByZWluaWNpYWRvc1xyXG4gIGNvbnN0IGdldFRvdGFsVmlld2Vyc1NlbnQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBWaWV3ZXJzIGFjdGl2b3MgYWN0dWFsZXNcclxuICAgICAgY29uc3QgYWN0aXZlVmlld2VycyA9IHRvdGFsVmlld2VycztcclxuICAgICAgXHJcbiAgICAgIC8vIFZpZXdlcnMgZXhwaXJhZG9zIChxdWUgdGVybWluYXJvbiBzdSBkdXJhY2nDs24pXHJcbiAgICAgIGNvbnN0IGV4cGlyZWRWaWV3ZXJzID0gZ2V0RXhwaXJlZFZpZXdlcnNDb3VudCgpO1xyXG4gICAgICBcclxuICAgICAgLy8gVmlld2VycyBkZSBibG9xdWVzIHJlaW5pY2lhZG9zXHJcbiAgICAgIGNvbnN0IHJlc2V0SGlzdG9yeUtleSA9ICdibG9ja1Jlc2V0SGlzdG9yeSc7XHJcbiAgICAgIGNvbnN0IHJlc2V0SGlzdG9yeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHJlc2V0SGlzdG9yeUtleSk7XHJcbiAgICAgIGxldCByZXNldFZpZXdlcnMgPSAwO1xyXG4gICAgICBcclxuICAgICAgaWYgKHJlc2V0SGlzdG9yeSkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCByZXNldHMgPSBKU09OLnBhcnNlKHJlc2V0SGlzdG9yeSk7XHJcbiAgICAgICAgICByZXNldFZpZXdlcnMgPSByZXNldHMucmVkdWNlKChzdW06IG51bWJlciwgcmVzZXQ6IGFueSkgPT4gc3VtICsgKHJlc2V0LnZpZXdlcnNMb3N0IHx8IDApLCAwKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FsY3VsYW5kbyB2aWV3ZXJzIHJlaW5pY2lhZG9zOicsIGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC8vIFRvdGFsIGVudmlhZG9zID0gYWN0aXZvcyArIGV4cGlyYWRvcyArIHJlaW5pY2lhZG9zXHJcbiAgICAgIHJldHVybiBhY3RpdmVWaWV3ZXJzICsgZXhwaXJlZFZpZXdlcnMgKyByZXNldFZpZXdlcnM7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjYWxjdWxhbmRvIHRvdGFsIGRlIHZpZXdlcnMgZW52aWFkb3M6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gdG90YWxWaWV3ZXJzO1xyXG4gICAgfVxyXG4gIH0sIFt0b3RhbFZpZXdlcnMsIGdldEV4cGlyZWRWaWV3ZXJzQ291bnRdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxHbG9iYWxDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7XHJcbiAgICAgIGxpbmssXHJcbiAgICAgIHNldExpbmssXHJcbiAgICAgIHRvdGFsVmlld2VycyxcclxuICAgICAgdXBkYXRlQmxvY2tWaWV3ZXJzLFxyXG4gICAgICBnZXRFeHBpcmVkVmlld2Vyc0NvdW50XHJcbiAgICB9fT5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9HbG9iYWxDb250ZXh0LlByb3ZpZGVyPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlR2xvYmFsID0gKCkgPT4ge1xyXG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEdsb2JhbENvbnRleHQpO1xyXG4gIGlmICghY29udGV4dCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VHbG9iYWwgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIEdsb2JhbFByb3ZpZGVyJyk7XHJcbiAgfVxyXG4gIHJldHVybiBjb250ZXh0O1xyXG59O1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJHbG9iYWxDb250ZXh0IiwidW5kZWZpbmVkIiwiR2xvYmFsUHJvdmlkZXIiLCJjaGlsZHJlbiIsImxpbmsiLCJzZXRMaW5rIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImJsb2NrVmlld2VycyIsInNldEJsb2NrVmlld2VycyIsImV4cGlyZWRWaWV3ZXJzIiwic2V0RXhwaXJlZFZpZXdlcnMiLCJnZXRFeHBpcmVkVmlld2Vyc0NvdW50IiwiZ2xvYmFsSGlzdG9yeUtleSIsImdsb2JhbEhpc3RvcnkiLCJvcGVyYXRpb25zIiwiSlNPTiIsInBhcnNlIiwibm93IiwiRGF0ZSIsImZvckVhY2giLCJvcCIsInN0YXR1cyIsImR1cmF0aW9uIiwic2F2ZWRBdCIsInN0YXJ0VGltZSIsImJhc2VUaW1lIiwic3RhcnREYXRlIiwiaXNOYU4iLCJnZXRUaW1lIiwiZW5kVGltZSIsImNvdW50IiwiZXJyb3IiLCJjb25zb2xlIiwid2FybiIsInVwZGF0ZUV4cGlyZWRWaWV3ZXJzIiwiZXhwaXJlZCIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwic2V0SXRlbSIsInVwZGF0ZUJsb2NrVmlld2VycyIsImJsb2NrSWQiLCJ2aWV3ZXJzIiwicHJldiIsImN1cnJlbnRBY3RpdmVWaWV3ZXJzIiwiT2JqZWN0IiwidmFsdWVzIiwicmVkdWNlIiwiYWNjIiwidG90YWxWaWV3ZXJzIiwiTWF0aCIsIm1heCIsImdldFRvdGFsVmlld2Vyc1NlbnQiLCJhY3RpdmVWaWV3ZXJzIiwicmVzZXRIaXN0b3J5S2V5IiwicmVzZXRIaXN0b3J5IiwicmVzZXRWaWV3ZXJzIiwicmVzZXRzIiwic3VtIiwicmVzZXQiLCJ2aWV3ZXJzTG9zdCIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VHbG9iYWwiLCJjb250ZXh0IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/GlobalContext.tsx\n"));

/***/ })

});