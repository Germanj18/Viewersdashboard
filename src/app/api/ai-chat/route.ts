import { NextRequest, NextResponse } from 'next/server';

// Opci√≥n 1: Google Gemini (GRATIS)
async function callGemini(userMessage: string) {
  const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.GEMINI_API_KEY}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      contents: [{
        parts: [{
          text: `Eres un asistente especializado en el Dashboard La Casa para YouTube viewers. Tienes conocimiento completo de c√≥mo funciona la aplicaci√≥n.

=== ARQUITECTURA DE LA APLICACI√ìN ===

üèóÔ∏è SISTEMA DE BLOQUES:
- Los usuarios tienen 10 bloques disponibles (Bloque 1-10)
- TODOS los bloques trabajan con la MISMA URL global del video
- Si el usuario quiere cambiar de video, cambia la URL global y afecta a todos los bloques
- Los bloques funcionan de manera paralela e independiente en t√©rminos de ejecuci√≥n
- Cada bloque tiene su propia configuraci√≥n: cantidad, duraci√≥n (Service ID), timing
- Los usuarios pueden activar/desactivar bloques individualmente
- Cada bloque mantiene su propio historial de operaciones

‚öôÔ∏è CONFIGURACI√ìN DE OPERACIONES:
- URL del video: Es GLOBAL para todos los bloques (un solo campo para toda la aplicaci√≥n)
- Para cambiar de video: el usuario cambia la URL global y todos los bloques usar√°n el nuevo video
- Cantidad de viewers: Cada bloque define su propia cantidad (ej: 100, 500, 1000)
- Service ID (duraci√≥n): Cada bloque puede tener diferente duraci√≥n
- Los bloques pueden ejecutarse simult√°neamente o de forma escalonada
- Las operaciones tienen estados: en progreso, exitosa, fallida

üîÑ OPERACIONES AUTOM√ÅTICAS AVANZADAS:
- Cada bloque puede configurarse con PATRONES AUTOM√ÅTICOS:
  ‚Ä¢ **CRECIENTE**: Empezar con pocos viewers e ir aumentando (ej: 100‚Üí200‚Üí300‚Üí500)
  ‚Ä¢ **DECRECIENTE**: Empezar con muchos viewers e ir reduciendo (ej: 500‚Üí300‚Üí200‚Üí100)
  ‚Ä¢ **CONSTANTE**: Mantener la misma cantidad en cada operaci√≥n (ej: 250‚Üí250‚Üí250)
- Los usuarios pueden definir: cantidad inicial, cantidad final, incremento/decremento, intervalos
- Ideal para simular crecimiento org√°nico o picos naturales de audiencia
- Cada bloque ejecuta su patr√≥n de forma independiente

üî• OPERACIONES AUTOM√ÅTICAS AVANZADAS (Funcionalidad Clave):
Cada bloque puede configurarse para ejecutar M√öLTIPLES operaciones autom√°ticas con patr√≥n de cantidad:

- **N√∫mero de operaciones**: Cu√°ntas operaciones autom√°ticas ejecutar (ej: 5 operaciones)
- **Duraci√≥n**: Tiempo entre cada operaci√≥n autom√°tica (ej: 3 horas)
- **Cantidad inicial**: Viewers de la primera operaci√≥n (ej: 500 viewers)
- **Cantidad a modificar**: Cantidad que se suma o resta en cada operaci√≥n (ej: ¬±100)

**EJEMPLOS DE PATRONES:**

üìâ **Patr√≥n Decreciente**: 
- Configuraci√≥n: 5 operaciones, 3h duraci√≥n, 500 inicial, -100 modificaci√≥n
- Resultado: Op1=500, Op2=400, Op3=300, Op4=200, Op5=100 viewers
- Uso: Simular momentum natural que va bajando

üìà **Patr√≥n Creciente**: 
- Configuraci√≥n: 4 operaciones, 2h duraci√≥n, 200 inicial, +150 modificaci√≥n  
- Resultado: Op1=200, Op2=350, Op3=500, Op4=650 viewers
- Uso: Simular crecimiento viral progresivo

‚û°Ô∏è **Patr√≥n Constante**: 
- Configuraci√≥n: 6 operaciones, 4h duraci√≥n, 300 inicial, +0 modificaci√≥n
- Resultado: Op1=300, Op2=300, Op3=300, Op4=300, Op5=300, Op6=300 viewers
- Uso: Mantener nivel constante de viewers

Esta funcionalidad permite automatizar campa√±as complejas sin configurar manualmente cada operaci√≥n.

üìä SERVICIOS DISPONIBLES:
- Service ID 334: 1 hora de duraci√≥n (viewers temporales)
- Service ID 335: 1.5 horas de duraci√≥n
- Service ID 336: 2 horas de duraci√≥n  
- Service ID 337: 2.5 horas de duraci√≥n
- Service ID 338: 3 horas de duraci√≥n
- Service ID 459: 4 horas de duraci√≥n
- Service ID 460: 6 horas de duraci√≥n
- Service ID 657: 8 horas de duraci√≥n (m√°s eficiente en costo)

üí∞ SISTEMA DE COSTOS:
- Los costos se calculan por viewer y por duraci√≥n
- Servicios m√°s largos (6h-8h) = mejor costo por viewer
- Servicios cortos (1h-2h) = m√°s caros pero m√°s flexibles
- El dashboard muestra "Costo por Viewer" para optimizaci√≥n
- Los costos se acumulan por operaci√≥n exitosa

üìà DASHBOARD Y M√âTRICAS:
- Total de operaciones ejecutadas
- Tasa de √©xito (porcentaje de operaciones exitosas)
- Costo total acumulado
- Total de viewers comprados
- M√©tricas por bloque individual
- Historial completo de operaciones con timestamps
- Alertas autom√°ticas para fallos o hitos importantes
- Exportaci√≥n de reportes (JSON, CSV, HTML)

üîÑ GESTI√ìN DE BLOQUES:
- Reset de bloques: Limpia historial pero mantiene configuraci√≥n
- Los usuarios pueden resetear bloques individuales
- El sistema guarda historial global para m√©tricas
- Cada reset se registra para auditor√≠a

‚è±Ô∏è HORARIOS Y TIMING:
- Los timestamps muestran hora de inicio (formato HH:MM:SS)
- Se calcula hora de finalizaci√≥n estimada basada en duraci√≥n
- Las operaciones se pueden programar o ejecutar inmediatamente
- El sistema rastrea horarios pico para optimizaci√≥n

üö® ESTADOS Y ALERTAS:
- Operaciones exitosas: ‚úÖ Verde, se cuentan en m√©tricas
- Operaciones fallidas: ‚ùå Rojo, no generan costo
- En progreso: ‚è≥ Amarillo, esperando resultado
- El sistema genera alertas por alta tasa de fallo (>20%)
- Notificaciones por hitos de viewers (m√∫ltiplos de 1000)

=== TU FUNCI√ìN COMO ASISTENTE ===

Ayudas a los usuarios con:

1. üéØ ESTRATEGIAS DE VIEWERS:
   - Calcular cantidades √≥ptimas por bloque
   - Elegir el service ID m√°s eficiente
   - Distribuir operaciones entre m√∫ltiples bloques
   - Timing y programaci√≥n de operaciones

2. üí∞ OPTIMIZACI√ìN DE COSTOS:
   - Recomendar servicios m√°s econ√≥micos
   - Calcular ROI de diferentes estrategias
   - Analizar m√©tricas de costo por viewer

3. ‚öôÔ∏è CONFIGURACI√ìN T√âCNICA:
   - Ayudar a configurar bloques correctamente
   - Solucionar problemas de operaciones fallidas
   - Explicar c√≥mo usar m√∫ltiples bloques simult√°neamente

4. üìä AN√ÅLISIS DE DATOS:
   - Interpretar m√©tricas del dashboard
   - Identificar patrones de √©xito/fallo
   - Recomendar mejoras basadas en historial

RESPONDE SIEMPRE:
- En espa√±ol, de manera amigable y profesional
- Con ejemplos pr√°cticos espec√≠ficos del dashboard
- Mencionando n√∫meros de bloques, service IDs, y cantidades concretas
- Usando emojis para claridad visual
- Con consejos que el usuario pueda implementar inmediatamente

CONSULTA DEL USUARIO: ${userMessage}`
        }]
      }],
      generationConfig: {
        temperature: 0.7,
        topK: 1,
        topP: 1,
        maxOutputTokens: 500,
      },
    }),
  });

  if (!response.ok) {
    throw new Error(`Gemini API error: ${response.statusText}`);
  }

  const data = await response.json();
  return data.candidates[0]?.content?.parts[0]?.text || 'Lo siento, no pude procesar tu consulta.';
}

// Opci√≥n 2: OpenAI API
async function callOpenAI(messages: any[]) {
  const response = await fetch('https://api.openai.com/v1/chat/completions', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
    },
    body: JSON.stringify({
      model: 'gpt-3.5-turbo',
      messages: messages,
      max_tokens: 500,
      temperature: 0.7,
    }),
  });

  if (!response.ok) {
    throw new Error(`OpenAI API error: ${response.statusText}`);
  }

  const data = await response.json();
  return data.choices[0].message.content;
}

// Opci√≥n 3: Hugging Face (gratis)
async function callHuggingFace(userMessage: string) {
  const response = await fetch(
    'https://api-inference.huggingface.co/models/microsoft/DialoGPT-medium',
    {
      headers: {
        'Authorization': `Bearer ${process.env.HUGGINGFACE_API_KEY}`,
        'Content-Type': 'application/json',
      },
      method: 'POST',
      body: JSON.stringify({
        inputs: userMessage,
        parameters: {
          max_length: 200,
          temperature: 0.7,
        },
      }),
    }
  );

  const data = await response.json();
  return data.generated_text || data[0]?.generated_text || 'Lo siento, no pude procesar tu consulta.';
}

// Respuestas inteligentes locales (fallback)
function generateLocalResponse(userInput: string): string {
  const input = userInput.toLowerCase();
  
  const responses = {
    viewers: {
      keywords: ['viewer', 'cuanto', 'cantidad', 'necesito', 'meta', 'objetivo'],
      response: `üìä **Calculadora de Viewers - Dashboard La Casa**:

**üéØ Para planificar tus viewers:**

1. **Define tu meta total** (ej: 2000 viewers para tu video actual)
2. **Elige estrategia de distribuci√≥n entre los 10 bloques:**
   ‚Ä¢ **2-3 Bloques**: Distribuci√≥n b√°sica (recomendado para empezar)
   ‚Ä¢ **4-6 Bloques**: Distribuci√≥n avanzada (mejor control)
   ‚Ä¢ **7-10 Bloques**: Para campa√±as masivas (uso escalonado)

3. **Todos los bloques usar√°n la misma URL global del video**
4. **Configura diferentes cantidades y Service IDs por bloque:**
   ‚Ä¢ Bloque 1: Service ID 336 (2h) - 800 viewers  
   ‚Ä¢ Bloque 2: Service ID 459 (4h) - 700 viewers, +30min
   ‚Ä¢ Bloque 3: Service ID 657 (8h) - 500 viewers, +1h

**üí° Ejemplo Pr√°ctico:**
Para 2000 viewers en TU VIDEO ACTUAL:
- **URL Global**: Tu video de YouTube (afecta todos los bloques)
- **Bloque 1**: 800 viewers, Service ID 459 (4h)
- **Bloque 2**: 700 viewers, Service ID 460 (6h), +30min  
- **Bloque 3**: 500 viewers, Service ID 336 (2h), +1h

¬øCu√°l es tu meta espec√≠fica de viewers?`
    },
    
    costos: {
      keywords: ['costo', 'precio', 'dinero', 'pagar', 'barato', 'economico', 'ahorro'],
      response: `üí∞ **Optimizaci√≥n de Costos - Dashboard La Casa**:

**ü•á Servicios m√°s eficientes** (menor costo por viewer):
1. **Service ID 657 (8h)** - M√°xima eficiencia econ√≥mica
2. **Service ID 460 (6h)** - Excelente balance precio/tiempo
3. **Service ID 459 (4h)** - Popular y efectivo

**üí° Estrategias de Ahorro:**
‚Ä¢ **Usa servicios largos**: 6h-8h para campa√±as grandes
‚Ä¢ **Divide operaciones**: M√∫ltiples bloques = mejor control
‚Ä¢ **Programa en horarios √≥ptimos**: Evita horas pico costosas
‚Ä¢ **Monitorea "Costo por Viewer"**: Optimiza basado en m√©tricas

**üìä Ejemplo de Optimizaci√≥n:**
‚ùå Ineficiente: 1000 viewers en Service ID 334 (1h)
‚úÖ Eficiente: 1000 viewers en Service ID 657 (8h)
üí∞ Ahorro: Hasta 40% menos costo por viewer

**ÔøΩ En el Dashboard revisa:**
- M√©trica "Costo por Viewer" 
- Comparativa por Service ID
- Historial de operaciones exitosas

¬øQuieres que calcule el costo √≥ptimo para tu campa√±a?`
    },
    
    estrategia: {
      keywords: ['estrategia', 'crecer', 'canal', 'youtube', 'consejos', 'plan', 'campana'],
      response: `üöÄ **Estrategias Avanzadas - Dashboard La Casa**:

**üéØ Estrategia Multi-Bloque (Recomendada):**
‚Ä¢ **Semana 1**: Configurar 2-3 bloques para tu video actual (200-300 viewers c/u)
‚Ä¢ **Semana 2**: Escalar a 4-5 bloques para el mismo video (400-500 viewers)  
‚Ä¢ **Cambio de video**: Actualizar URL global y ajustar estrategia
‚Ä¢ **Mes 2+**: Optimizar basado en m√©tricas del dashboard

**‚è∞ Timing Perfecto para UN VIDEO:**
‚Ä¢ **Publicar video** ‚Üí **Cambiar URL global** ‚Üí Esperar 15-30min 
‚Ä¢ **Activar Bloque 1** (cantidad inicial)
‚Ä¢ **+30min** ‚Üí **Activar Bloque 2** (Service ID diferente)
‚Ä¢ **+1h** ‚Üí **Activar Bloque 3** para sostener momentum

**üé¨ Workflow por Video:**
1. **Video Nuevo**: Actualizar URL global en el dashboard
2. **Configurar bloques**: Diferentes cantidades/duraciones para el mismo video
3. **Ejecutar escalonado**: No todos los bloques a la vez
4. **Siguiente video**: Cambiar URL global y repetir proceso

**ÔøΩ Configuraci√≥n por Tipo de Canal:**
‚Ä¢ **Nuevo canal**: 100-300 viewers, Service ID 336-459
‚Ä¢ **Canal establecido**: 500-1000 viewers, Service ID 459-460
‚Ä¢ **Canal grande**: 1000+ viewers, Service ID 460-657

**üìà Escalamiento Inteligente:**
1. **Analizar m√©tricas** en dashboard despu√©s de cada campa√±a
2. **Replicar bloques exitosos** (alta tasa de √©xito)
3. **Ajustar Service IDs** basado en costo por viewer
4. **Usar m√∫ltiples videos** para distribuci√≥n de riesgo

**üé® Distribuci√≥n Creativa:**
- Video principal: 60% de viewers totales
- Videos secundarios: 40% distribuidos

¬øQu√© tipo de canal tienes? ¬øNuevo o establecido?`
    },
    
    bloques: {
      keywords: ['bloque', 'configurar', 'setup', 'como', 'operacion', 'ejecutar'],
      response: `‚öôÔ∏è **Gu√≠a Completa de Bloques - Dashboard La Casa**:

**üèóÔ∏è Sistema de Bloques (1-10 disponibles):**
‚Ä¢ Cada bloque = 1 operaci√≥n independiente para la URL global
‚Ä¢ TODOS los bloques usan la MISMA URL del video (configuraci√≥n global)
‚Ä¢ Para cambiar de video: actualizar la URL global (afecta todos los bloques)
‚Ä¢ Pueden ejecutarse simult√°neamente o programados

**üîß Configuraci√≥n Paso a Paso:**
1. **Configurar URL Global**: Una sola URL para todos los bloques
2. **Seleccionar Bloque** (ej: Bloque 3)  
3. **Cantidad**: N√∫mero de viewers para este bloque espec√≠fico
4. **Service ID**: Duraci√≥n deseada (336, 459, 460, 657)
5. **Activar**: Ejecutar inmediatamente o programar

**ÔøΩ OPERACIONES AUTOM√ÅTICAS AVANZADAS:**

**üìà PATR√ìN CRECIENTE** (Simula crecimiento org√°nico):
- Bloque 1: 100 viewers ‚Üí 200 ‚Üí 350 ‚Üí 500 (autom√°tico)
- Bloque 2: 150 viewers ‚Üí 300 ‚Üí 450 ‚Üí 600 (autom√°tico)
- **Uso**: Videos nuevos, estrenos, contenido viral

**üìâ PATR√ìN DECRECIENTE** (Simula picos naturales):
- Bloque 3: 800 viewers ‚Üí 600 ‚Üí 400 ‚Üí 200 (autom√°tico)
- Bloque 4: 500 viewers ‚Üí 350 ‚Üí 200 ‚Üí 100 (autom√°tico)
- **Uso**: Eventos en vivo, tendencias que decaen

**üìä PATR√ìN CONSTANTE** (Audiencia estable):
- Bloque 5: 300 viewers ‚Üí 300 ‚Üí 300 ‚Üí 300 (autom√°tico)
- **Uso**: Mantener posicionamiento, audiencia base

**üí° Configuraciones Recomendadas:**

**Para 1 Video (Estrategia Autom√°tica Combinada):**
- **URL Global**: Tu video de YouTube
- **Bloque 1**: Patr√≥n CRECIENTE (100‚Üí500 viewers, Service ID 459)
- **Bloque 2**: Patr√≥n CONSTANTE (300 viewers, Service ID 336)
- **Bloque 3**: Patr√≥n DECRECIENTE (600‚Üí200 viewers, Service ID 460)

**üö® Mejores Pr√°cticas:**
‚Ä¢ **Combina patrones**: Creciente + Constante + Decreciente
‚Ä¢ **Monitorea estado**: ‚úÖ Exitoso, ‚ùå Fallido, ‚è≥ En progreso
‚Ä¢ **Los patrones son independientes**: Cada bloque ejecuta su propio patr√≥n
‚Ä¢ **Reset solo si necesario**: Limpia historial pero mantiene config

**üìä Seguimiento:**
- Cada bloque muestra su propia tasa de √©xito
- Timestamps de inicio y finalizaci√≥n estimada
- Costo individual por bloque
- Progreso del patr√≥n autom√°tico

¬øQu√© configuraci√≥n espec√≠fica necesitas ayuda?`
    },
    
    automatico: {
      keywords: ['automatico', 'patron', 'creciente', 'decreciente', 'progresivo', 'escalon'],
      response: `üîÑ **Patrones Autom√°ticos Avanzados - Dashboard La Casa**:

**ü§ñ SISTEMA DE OPERACIONES AUTOM√ÅTICAS:**
Los bloques pueden ejecutar secuencias autom√°ticas sin intervenci√≥n manual.

**üìà PATR√ìN CRECIENTE** (Crecimiento Org√°nico):

Bloque 1: 100 > 200 > 350 > 500 > 700 viewers
Bloque 2: 50 > 100 > 200 > 400 > 600 viewers

‚Ä¢ **Ideal para**: Videos nuevos, lanzamientos, contenido viral
‚Ä¢ **Incremento configurable**: +50, +100, +150 por operaci√≥n
‚Ä¢ **Timing**: Cada operaci√≥n separada por intervalos definidos

**üìâ PATR√ìN DECRECIENTE** (Picos Naturales):

Bloque 3: 1000 > 750 > 500 > 300 > 150 viewers
Bloque 4: 800 > 600 > 400 > 250 > 100 viewers

‚Ä¢ **Ideal para**: Eventos en vivo, tendencias que decaen
‚Ä¢ **Decremento configurable**: -250, -200, -150 por operaci√≥n
‚Ä¢ **Simula**: Comportamiento real de audiencia

**üìä PATR√ìN CONSTANTE** (Estabilidad):

Bloque 5: 300 > 300 > 300 > 300 > 300 viewers
Bloque 6: 500 > 500 > 500 > 500 > 500 viewers

‚Ä¢ **Ideal para**: Mantener posicionamiento, audiencia base
‚Ä¢ **Consistencia**: Misma cantidad en cada ejecuci√≥n

**üéØ ESTRATEGIA COMBINADA EJEMPLAR:**

**Para UN VIDEO (URL Global):**
- **Bloque 1**: Creciente 100>500 (Service ID 459) - Arranque org√°nico
- **Bloque 2**: Creciente 200>800 (Service ID 460) - Momentum principal  
- **Bloque 3**: Constante 400 (Service ID 336) - Estabilidad base
- **Bloque 4**: Decreciente 600>200 (Service ID 657) - Pico natural
- **Bloque 5**: Constante 250 (Service ID 459) - Sost√©n final

**‚öôÔ∏è CONFIGURACI√ìN PR√ÅCTICA:**
1. **Definir patr√≥n** por bloque (creciente/decreciente/constante)
2. **Cantidad inicial y final** (ej: 100>500)
3. **Incremento/decremento** (ej: +75 cada operaci√≥n)
4. **Intervalo entre operaciones** (ej: cada 2 horas)
5. **Service ID** (duraci√≥n de cada operaci√≥n individual)

**üìã VENTAJAS DEL SISTEMA:**
‚Ä¢ **Comportamiento realista**: Simula audiencia org√°nica
‚Ä¢ **M√∫ltiples estrategias simult√°neas**: 10 bloques = 10 patrones diferentes
‚Ä¢ **Set & Forget**: Una vez configurado, se ejecuta autom√°ticamente
‚Ä¢ **Flexibilidad total**: Cada bloque con su propio patr√≥n

¬øQuieres que te ayude a dise√±ar una estrategia autom√°tica espec√≠fica?`
    },
    
    metricas: {
      keywords: ['m√©trica', 'dashboard', 'an√°lisis', 'datos', 'estad√≠stica', 'tasa', 'exito'],
      response: `üìä **An√°lisis Completo de M√©tricas - Dashboard La Casa**:

**üéØ M√©tricas Cr√≠ticas del Dashboard:**

**1. Tasa de √âxito** (M√°s importante):
‚Ä¢ **>90%**: Excelente configuraci√≥n
‚Ä¢ **80-89%**: Buena, pero optimizable  
‚Ä¢ **70-79%**: Revisar configuraci√≥n
‚Ä¢ **<70%**: Problemas cr√≠ticos - revisar URLs/configuraci√≥n

**2. Costo por Viewer**:
‚Ä¢ M√©trica clave para optimizaci√≥n
‚Ä¢ Compara entre Service IDs
‚Ä¢ Objetivo: Reducir constantemente

**3. Total de Operaciones**:
‚Ä¢ Historial completo de todos los bloques
‚Ä¢ Incluye exitosas + fallidas
‚Ä¢ √ötil para planificar presupuestos

**üìà An√°lisis por Bloque:**
‚Ä¢ Cada bloque muestra rendimiento individual
‚Ä¢ Identifica bloques m√°s exitosos
‚Ä¢ Replica configuraciones ganadoras

**üîç Alertas del Sistema:**
‚Ä¢ **üî¥ Tasa alta de fallo (>20%)**: Revisar configuraci√≥n
‚Ä¢ **üü° Costos elevados**: Considerar Service IDs m√°s largos
‚Ä¢ **üü¢ Hitos alcanzados**: Celebrar m√∫ltiplos de 1000 viewers

**üìã Reportes Exportables:**
‚Ä¢ **JSON**: Datos completos para an√°lisis
‚Ä¢ **CSV**: Para Excel y an√°lisis estad√≠stico
‚Ä¢ **HTML**: Reporte ejecutivo visual

**üí° Interpretaci√≥n Pr√°ctica:**
Si tu tasa de √©xito baja:
1. Verificar URLs de videos (deben ser p√∫blicos)
2. Reducir cantidades por operaci√≥n
3. Usar Service IDs m√°s conservadores (4h-6h)
4. Espaciar operaciones en el tiempo

**üéØ Optimization Tips:**
- Exportar reporte semanal
- Comparar costos por Service ID
- Identificar horarios m√°s exitosos
- Replicar configuraciones con >95% √©xito

¬øQu√© m√©trica espec√≠fica te preocupa o quieres optimizar?`
    },
    
    problemas: {
      keywords: ['error', 'fallo', 'problema', 'no funciona', 'ayuda', 'arreglar'],
      response: `üö® **Soluci√≥n de Problemas - Dashboard La Casa**:

**‚ùå Operaciones Fallidas - Causas Comunes:**

**1. URL del Video:**
‚Ä¢ ‚úÖ Debe ser p√∫blico en YouTube
‚Ä¢ ‚ùå Videos privados/eliminados fallan
‚Ä¢ üîß Verificar: Abrir URL en ventana inc√≥gnita

**2. Configuraci√≥n de Cantidad:**
‚Ä¢ ‚ùå Cantidades muy altas pueden fallar
‚Ä¢ ‚úÖ Empezar con 100-500 viewers
‚Ä¢ üîß Dividir en m√∫ltiples bloques si necesitas m√°s

**3. Service ID Problem√°tico:**
‚Ä¢ ‚ùå Service IDs cortos (1h-2h) m√°s propensos a fallos
‚Ä¢ ‚úÖ Usar Service ID 459 (4h) o 460 (6h) para estabilidad
‚Ä¢ üîß Cambiar a duraci√≥n m√°s larga

**4. Sobrecarga del Sistema:**
‚Ä¢ ‚ùå Muchos bloques simult√°neos
‚Ä¢ ‚úÖ M√°ximo 3-4 bloques activos
‚Ä¢ üîß Espaciar operaciones 15-30min

**üîß Pasos de Diagn√≥stico:**
1. **Revisar Dashboard**: ¬øQu√© bloques fallan m√°s?
2. **Verificar URLs**: ¬øSon videos p√∫blicos recientes?
3. **Analizar cantidades**: ¬øSon realistas para el canal?
4. **Revisar timing**: ¬øMuchas operaciones simult√°neas?

**üìä Si tu Tasa de √âxito <80%:**
‚Ä¢ **Reset bloques problem√°ticos**
‚Ä¢ **Reducir cantidades a 200-400 viewers**
‚Ä¢ **Usar Service ID 459 (4h) exclusivamente**
‚Ä¢ **Espaciar operaciones m√≠nimo 30min**

**üöÄ Configuraci√≥n de Emergencia (Alta Confiabilidad):**
- **Bloque 1**: 300 viewers, Service ID 459 (4h)
- Esperar resultado exitoso antes de continuar
- **Bloque 2**: 250 viewers, Service ID 460 (6h), +45min

**üí° Prevenci√≥n de Problemas:**
‚Ä¢ Probar con cantidades peque√±as primero
‚Ä¢ Usar videos con engagement org√°nico
‚Ä¢ No saturar el sistema con muchos bloques
‚Ä¢ Monitorear m√©tricas constantemente

¬øQu√© error espec√≠fico est√°s experimentando?`
    }
  };

  // Buscar la categor√≠a m√°s relevante
  for (const [category, data] of Object.entries(responses)) {
    if (data.keywords.some(keyword => input.includes(keyword))) {
      return data.response;
    }
  }

  // Respuesta general
  return `ü§ñ **¬°Hola! Soy tu Asistente Especializado en Dashboard La Casa**

**üèóÔ∏è Sistema de Bloques:** Tienes 10 bloques disponibles que trabajan con la URL global del video

**üéØ Puedo ayudarte con:**

**üìä Planificaci√≥n de Campa√±as:**
‚Ä¢ "Necesito 2000 viewers para mi video, ¬øc√≥mo los distribuyo?"
‚Ä¢ "¬øCu√°ntos bloques usar para 5 videos diferentes?"
‚Ä¢ "¬øQu√© Service ID es mejor para mi estrategia?"

**üí∞ Optimizaci√≥n de Costos:**
‚Ä¢ "¬øCu√°l es el Service ID m√°s econ√≥mico?"
‚Ä¢ "¬øC√≥mo reducir mi costo por viewer?"
‚Ä¢ "¬øConviene usar Service ID 657 (8h) o 459 (4h)?"

**‚öôÔ∏è Configuraci√≥n T√©cnica:**
‚Ä¢ "¬øC√≥mo configurar el Bloque 3 correctamente?"
‚Ä¢ "¬øPuedo ejecutar 5 bloques simult√°neamente?"
‚Ä¢ "Mi tasa de √©xito es 70%, ¬øqu√© hago?"

**ÔøΩ An√°lisis de M√©tricas:**
‚Ä¢ "¬øQu√© significan mis m√©tricas del dashboard?"
‚Ä¢ "¬øPor qu√© mis operaciones fallan?"
‚Ä¢ "¬øC√≥mo interpretar la tasa de √©xito por bloque?"

**üöÄ Estrategias Avanzadas:**
‚Ä¢ "¬øC√≥mo hacer crecer mi canal con m√∫ltiples bloques?"
‚Ä¢ "¬øCu√°l es el timing perfecto para activar operaciones?"
‚Ä¢ "¬øC√≥mo escalar de 500 a 2000 viewers por video?"

**üîß Soluci√≥n de Problemas:**
‚Ä¢ "El Bloque 2 siempre falla, ¬øpor qu√©?"
‚Ä¢ "¬øDebo resetear un bloque con baja tasa de √©xito?"
‚Ä¢ "¬øC√≥mo configurar operaciones m√°s confiables?"

**üí° Ejemplos de consultas espec√≠ficas:**
‚Ä¢ "Quiero 1500 viewers en 3 videos, ¬øc√≥mo uso los bloques?"
‚Ä¢ "Mi Service ID 336 tiene 80% √©xito pero Service ID 459 tiene 95%, ¬øcambio?"
‚Ä¢ "¬øEs mejor 1 bloque con 1000 viewers o 3 bloques con 333 cada uno?"

¬øEn qu√© aspecto espec√≠fico del Dashboard La Casa necesitas ayuda? üòä`;
}

export async function POST(request: NextRequest) {
  try {
    const { messages } = await request.json();
    
    if (!messages || !Array.isArray(messages)) {
      return NextResponse.json(
        { error: 'Formato de mensajes inv√°lido' },
        { status: 400 }
      );
    }

    const userMessage = messages[messages.length - 1]?.content || '';
    let response: string;

    // Prioridad: Gemini (gratis) > OpenAI (pago) > Hugging Face (gratis) > Local
    try {
      if (process.env.GEMINI_API_KEY) {
        console.log('üü¢ Usando Gemini API (gratis)');
        response = await callGemini(userMessage);
      } else if (process.env.OPENAI_API_KEY) {
        console.log('üü° Usando OpenAI API (pago)');
        response = await callOpenAI(messages);
      } else if (process.env.HUGGINGFACE_API_KEY) {
        console.log('üü† Usando Hugging Face API (gratis)');
        response = await callHuggingFace(userMessage);
      } else {
        throw new Error('No API keys configured');
      }
    } catch (error) {
      console.log('üî¥ API externa fall√≥, usando respuestas locales:', error);
      response = generateLocalResponse(userMessage);
    }

    return NextResponse.json({ response });
    
  } catch (error) {
    console.error('Error en AI chat API:', error);
    
    return NextResponse.json(
      { 
        response: '‚ùå Lo siento, hubo un error. ¬øPodr√≠as intentar reformular tu pregunta?' 
      },
      { status: 500 }
    );
  }
}